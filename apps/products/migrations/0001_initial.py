# Generated by Django 5.2.6 on 2025-09-24 16:00

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="상품명")),
                ("description", models.TextField(verbose_name="상품설명")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "판매 중"),
                            ("sold_out", "품절"),
                            ("end_of_sale", "판매 종료"),
                            ("inactive", "비활성화"),
                        ],
                        max_length=255,
                        verbose_name="상태",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="가격",
                    ),
                ),
            ],
            options={
                "verbose_name": "상품",
                "verbose_name_plural": "상품",
                "indexes": [
                    models.Index(fields=["name"], name="products_pr_name_9ff0a3_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="ProductStock",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "physical_stock",
                    models.IntegerField(default=0, verbose_name="실제 재고"),
                ),
                (
                    "reserved_stock",
                    models.IntegerField(default=0, verbose_name="예약 재고"),
                ),
                (
                    "available_stock",
                    models.IntegerField(default=0, verbose_name="가용 재고"),
                ),
                (
                    "min_stock_level",
                    models.IntegerField(default=0, verbose_name="최소 재고 수준"),
                ),
                (
                    "reorder_point",
                    models.IntegerField(default=0, verbose_name="재고 주문 포인트"),
                ),
                (
                    "warehouse_code",
                    models.CharField(
                        default="3077006", max_length=255, verbose_name="창고 코드"
                    ),
                ),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_master",
                        to="products.product",
                        verbose_name="상품",
                    ),
                ),
            ],
            options={
                "verbose_name": "상품 재고",
                "verbose_name_plural": "상품 재고",
            },
        ),
        migrations.CreateModel(
            name="StockReservation",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="예약 수량")),
                (
                    "order_id",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=255,
                        verbose_name="주문 ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "대기중"),
                            ("confirmed", "확정"),
                            ("cancelled", "취소"),
                            ("expired", "만료"),
                        ],
                        max_length=255,
                        verbose_name="예약 상태",
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="만료 시간")),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("cancellation_reason", models.TextField(blank=True)),
                (
                    "product_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="products.productstock",
                        verbose_name="상품 재고",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="예약자",
                    ),
                ),
            ],
            options={
                "verbose_name": "재고 예약",
                "verbose_name_plural": "재고 예약",
            },
        ),
        migrations.CreateModel(
            name="StockTransaction",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="생성일시"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="수정일시"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("inbound", "입고"),
                            ("outbound", "출고"),
                            ("reserve", "예약"),
                            ("release", "예약 해제"),
                            ("adjust", "조정"),
                            ("return", "반품"),
                            ("transfer", "이동"),
                        ],
                        max_length=20,
                        verbose_name="트랜잭션 유형",
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="수량")),
                (
                    "reference_type",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="참조 타입"
                    ),
                ),
                (
                    "reference_id",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="참조 ID"
                    ),
                ),
                ("before_physical", models.IntegerField()),
                ("after_physical", models.IntegerField()),
                ("before_available", models.IntegerField()),
                ("after_available", models.IntegerField()),
                ("notes", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "product_stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="products.productstock",
                        verbose_name="상품 재고",
                    ),
                ),
            ],
            options={
                "verbose_name": "재고 트랜잭션",
                "verbose_name_plural": "재고 트랜잭션",
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddIndex(
            model_name="productstock",
            index=models.Index(
                fields=["product"], name="products_pr_product_cb8c7f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productstock",
            index=models.Index(
                fields=["available_stock"], name="products_pr_availab_e6333c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productstock",
            index=models.Index(
                fields=["warehouse_code"], name="products_pr_warehou_021dd2_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="productstock",
            constraint=models.CheckConstraint(
                condition=models.Q(("physical_stock__gte", 0)),
                name="physical_stock_non_negative",
            ),
        ),
        migrations.AddConstraint(
            model_name="productstock",
            constraint=models.CheckConstraint(
                condition=models.Q(("reserved_stock__gte", 0)),
                name="reserved_stock_non_negative",
            ),
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["product_stock", "status"],
                name="products_st_product_dc6c81_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["user_id", "status"], name="products_st_user_id_d98b38_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["order_id"], name="products_st_order_i_11ffe3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["expires_at", "status"], name="products_st_expires_6835f4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stocktransaction",
            index=models.Index(
                fields=["product_stock", "-created_at"],
                name="products_st_product_8e4d21_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="stocktransaction",
            index=models.Index(
                fields=["transaction_type", "-created_at"],
                name="products_st_transac_6c0ce1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="stocktransaction",
            index=models.Index(
                fields=["reference_type", "reference_id"],
                name="products_st_referen_d98c37_idx",
            ),
        ),
    ]
