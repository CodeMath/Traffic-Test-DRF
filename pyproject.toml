[project]
name = "traffic-django"
version = "0.1.0"
description = "대용량 트래픽 테스트를 위한 Django App"
authors = [
    {name = "codemath", email = "xyrho123@naver.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13,<4"
dependencies = [
    "django>=5.2.6,<6.0.0",
    "djangorestframework>=3.15.0,<4.0.0",
    "drf-spectacular>=0.28.0,<0.29.0",
    "django-filter>=25.1,<26.0",
    "django-cors-headers>=4.9.0,<5.0.0",
    "django-redis>=6.0.0,<7.0.0",
    "celery>=5.5.3,<6.0.0",
    "django-celery-results>=2.6.0,<3.0.0",
    "requests>=2.32.5,<3.0.0",
    "djangorestframework-simplejwt (>=5.5.1,<6.0.0)",
    "django-environ (>=0.12.0,<0.13.0)",
    "python-json-logger (>=3.3.0,<4.0.0)",
    "psutil (>=7.1.0,<8.0.0)",
    "psycopg2-binary (>=2.9.0,<3.0.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "django-prometheus (>=2.4.1,<3.0.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "ruff>=0.13.1,<0.14.0",
    "ipython>=8.18.0,<9.0.0",
    "django-extensions>=3.2.3,<4.0.0",
    "pytest-django (>=4.11.1,<5.0.0)",
    "faker (>=37.8.0,<38.0.0)",
    "factory-boy (>=3.3.3,<4.0.0)",
    "locust (>=2.40.5,<3.0.0)",
]

[tool.poetry]
package-mode = false

# ==================== Ruff 설정 ====================
[tool.ruff]
target-version = "py313"
line-length = 130
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "venv",
    "__pycache__",
    "migrations",
    "*.pyc",
    "*.pyo",
    "build",
    "dist",
    "node_modules",
    "media",
    "static",
    ".mypy_cache",
    ".pytest_cache",
    ".tox",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DJ",   # flake8-django
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
]

ignore = [
    "E501",  # line too long (130자로 설정)
    "B008",  # function calls in argument defaults
    "DJ001", # Django model without __str__
    "RUF012", # Mutable class attributes
]

[tool.ruff.lint.pycodestyle]
max-line-length = 130

[tool.ruff.lint.isort]
known-third-party = ["django", "rest_framework", "celery", "drf_spectacular"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"*/tests.py" = ["S101"]
"*/test_*.py" = ["S101"]
"*/migrations/*.py" = ["E501", "N806"]
"*/settings/*.py" = ["F405", "E501"]
"*/settings.py" = ["F405", "E501"]

[tool.ruff.lint.flake8-django]
django-settings-module = "config.settings"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
